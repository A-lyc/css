@mixin hide () {
  // 最小屏幕尺寸的最大值
  // 最小的屏幕档位
  @media (max-width: $responsive-smallest-maxWidth) {
    @include hide-handle($responsive-smallest);
  }
  // 除去最小的屏幕档位的剩下所有
  @for $i from 1 through length($responsive-breakpoints) - 1 {
    // 当前循环的档位
    $item: nth($responsive-breakpoints, $i);
    // 要用到的屏幕名
    $itemScreenName: map_get($item, name);
    // 下一个档位（要用他的innerWidth）
    $next: nth($responsive-breakpoints, $i + 1);
    // 要用到的最大屏幕宽度
    $nextInnerMaxWidth: map_get($next, innerWidth) - 1;
    @media (max-width: $nextInnerMaxWidth) {
      @include hide-handle($itemScreenName);
    }
  }
}

@mixin hide-handle ($screen) {
  &-#{$screen} {
    display: none;
  }
}