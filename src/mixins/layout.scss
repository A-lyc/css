@mixin loop ($attr, $step, $max) {
  @if ($is-responsive) {
    @each $breakpoint in $responsive-breakpoint {
      // 当前循环的下标
      $i: 0;
      // 当前值（带单位的）
      $value: 0;
      // 当前断点的设备的标识名称
      $name: map_get($breakpoint, name);
      // 当前断点的最小宽度
      $min-width: map_get($breakpoint, min-width);
      @media (min-width: $min-width) {
        @while ($value < $max) {
          // 当前值（带单位的）
          $value: $i * $step;
          // 用于 class 名 的 属性
          $value-class: strip-unit($value);
          // font-size 和 line-height 有最小值
          @if ($attr == font-size) {
            $value: $value + strip-unit($fs-min);
            $value-class: $value-class + strip-unit($fs-min);
          }
          // line-height 有最小值，并且名字需要特殊处理
          @else if ($attr == line-height) {
            $value: $value + strip-unit($lh-min);
            $value-class: ( $value-class + strip-unit($lh-min) ) * 10;
          }
          &-#{$name}-#{$value-class} {
            @if ($attr == margin) {
              margin: $value;
            }
            @else if ($attr == margin-top) {
              margin-top: $value;
            }
            @else if ($attr == margin-right) {
              margin-right: $value;
            }
            @else if ($attr == margin-bottom) {
              margin-bottom: $value;
            }
            @else if ($attr == margin-left) {
              margin-left: $value;
            }
            @else if ($attr == padding) {
              padding: $value;
            }
            @else if ($attr == padding-top) {
              padding-top: $value;
            }
            @else if ($attr == padding-right) {
              padding-right: $value;
            }
            @else if ($attr == padding-bottom) {
              padding-bottom: $value;
            }
            @else if ($attr == padding-left) {
              padding-left: $value;
            }
            @else if ($attr == font-size) {
              font-size: $value;
            }
            @else if ($attr == line-height) {
              line-height: $value;
            }
          }
          $i: $i + 1;
        }
      }
    }
  }
}

@mixin margin () {
  @include loop(margin, $margin-step, $margin-max);
}
@mixin margin-top () {
  @include loop(margin-top, $margin-step, $margin-max);
}
@mixin margin-right () {
  @include loop(margin-right, $margin-step, $margin-max);
}
@mixin margin-bottom () {
  @include loop(margin-bottom, $margin-step, $margin-max);
}
@mixin margin-left () {
  @include loop(margin-left, $margin-step, $margin-max);
}
@mixin padding () {
  @include loop(padding, $padding-step, $padding-max);
}
@mixin padding-top () {
  @include loop(padding-top, $padding-step, $padding-max);
}
@mixin padding-right () {
  @include loop(padding-right, $padding-step, $padding-max);
}
@mixin padding-bottom () {
  @include loop(padding-bottom, $padding-step, $padding-max);
}
@mixin padding-left () {
  @include loop(padding-left, $padding-step, $padding-max);
}
@mixin font-size () {
  @include loop(font-size, $fs-step, $fs-max);
}
@mixin line-height () {
  @include loop(line-height, $lh-step, $lh-max);
}
